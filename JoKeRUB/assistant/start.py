#    ุฌููุน ุงูุญููู ููุทูุฑู ุณูุฑุณ ุฌููุจุซูู ุญุตุฑูุง ููู ููุท
#    ุงุฐุง ุชุฎูุท ุงูููู ุงุฐู ุงูุญููู ููุงุชุจูู ููุทูุฑูู ูุง ุชุญุฐู ุงูุญููู ูุชุตูุฑ ูุงุดู ๐
#    ูุชุงุจุฉ ุงูุดุณุฏ 
import asyncio
import io
import re
import os
from telethon import Button, custom, events
from telethon.tl.functions.users import GetFullUserRequest
from JoKeRUB import bot
from JoKeRUB.sql_helper.blacklist_assistant import (
    add_nibba_in_db,
    is_he_added,
    removenibba,
)
from JoKeRUB.sql_helper.botusers_sql import add_me_in_db, his_userid
from JoKeRUB.sql_helper.idadder_sql import (
    add_usersid_in_db,
    already_added,
    get_all_users,
)
from l313l.razan.resources.assistant import *
from sai import gpt  # ุงุณุชูุฑุงุฏ ูุธููุฉ gpt

# ุฅูุดุงุก ุจูุช Telegram
TOKEN = os.getenv('TG_BOT_TOKEN')
if not TOKEN:
    raise ValueError("ูู ูุชู ุชุนููู ูุชุบูุฑ ุงูุจูุฆุฉ 'TOKEN'.")

bot = telebot.TeleBot(TOKEN)

# ุจุฏุก ูุธููุฉ gptMessage
@bot.message_handler(content_types=['text'])
def gptMessage(message):
    if message.text.startswith('/p '):
        question = message.text[3:]  # ุงุณุชุฎุฑุฌ ุงูุณุคุงู ุจุนุฏ ุงูุฃูุฑ /p
        resp = gpt(question)  # ุฃุฒู ูุนุงูุฌุฉ ุงูุฃุฎุทุงุก
        bot.send_message(message.chat.id, f'<b>ุงูุนูุฑุจ : {resp}</b>', parse_mode='HTML')

#start 
@tgbot.on(events.NewMessage(pattern="^/start"))
async def start(event):
    rehu = await tgbot.get_me()
    bot_id = rehu.first_name
    bot_username = rehu.username
    replied_user = await event.client(GetFullUserRequest(event.sender_id))
    firstname = replied_user.users[0].first_name
    vent = event.chat_id
    starttext = f"**ููุฑุญุจุง {firstname} ! ุงููุง ููู {bot_id}, ุจููุช ูุณุงุนูุฏ ุจุณููุท  \n\n- [ููุงูู ุงูุจููุช](tg://user?id={bot.uid}) \nูููููู ูุฑุงุณููุฉ ุงูููุงูู ุนุจูุฑ ูุฐุง ุงูุจููุช . \n\nุงุฐุง ูููุช ุชูุฑูุฏ ุชููุตูุจ ุจููุช ุฎูุงุต ุจูู ุชูุงูุฏ ูู ุงูุงุฒุฑุงุฑ ุจุงูุฃุณูู**"
    
    if event.sender_id == bot.uid:
        await tgbot.send_message(
            vent,
            message=f"**ุงูููุง ูุง ูุงูููู ุงููู ุงููุง {bot_id}, ูุณูุงุนุฏู  \nููุงุฐุง ุชุฑููุฏ ุงู ุชูุนูู ุงููููู **",
            buttons=[
                [Button.inline("ุนุฑุถ ุงููุณุชุฎุฏููู ", data="users"), Button.inline("ุงูุงูุฑ ุงูุจููุช ", data="gibcmd")],
                [Button.url("ุงููุทููุฑ ูุญูุฏ", "https://t.me/Zo_r0")],
                [Button.url("ุงููุทููุฑ ุนููุด", "https://t.me/I_e_e_l")],
            ]
        )
    else:
        if already_added(event.sender_id):
            pass
        elif not already_added(event.sender_id):
            add_usersid_in_db(event.sender_id)
        await tgbot.send_message(
            event.chat_id,
            message=starttext,
            link_preview=False,
            buttons=[
                [custom.Button.inline("ุชููุตูุจ ุงูุนูุฑุจ ๐ฆ", data="deploy")],
                [Button.url("ุชุญุชุงุฌ ูุณูุงุนุฏุฉ ", "https://t.me/Zo_r0")],
            ],
        )

# Data
@tgbot.on(events.callbackquery.CallbackQuery(data=re.compile(b"deploy")))
async def help(event):
    await event.delete()
    if event.query.user_id is not bot.uid:
        await tgbot.send_message(
            event.chat_id,
            message="**ูุชููุตูุจ ุงูุจููุช ุงูุฎุงุต ุจู ุงุชุจูุน ุงูุฎุทููุงุช ูู ุงูุงุณููู ูุญุงูู ูุงุฐุง ูู ุชุณุชุทูุน ุชูุถู ุงูู ูุฌููุนุฉ ุงููุณุงุนุฏุฉ ููุณุงุนุฏูู ๐งธโฅ**.",
            buttons=[
                [Button.url("ูุฑูุจ ุงููุณุงุนุฏุฉ ", "https://t.me/Scorpions_scorp")],
            ],
        )

@tgbot.on(events.callbackquery.CallbackQuery(data=re.compile(b"users")))
async def users(event):
    if event.query.user_id == bot.uid:
        await event.delete()
        total_users = get_all_users()
        users_list = "- ููุงุฆูุฉ ูุณุชุฎูุฏููู ุงูุจููุช  : \n\n"
        for starked in total_users:
            users_list += ("==> {} \n").format(int(starked.chat_id))
        with io.BytesIO(str.encode(users_list)) as tedt_file:
            tedt_file.name = "Scorpion.txt"
            await tgbot.send_file(
                event.chat_id,
                tedt_file,
                force_document=True,
                caption="ูุฌููุน ูุณุชุฎุฏูููู ุจูุชูู",
                allow_cache=False,
            )
    else:
        pass

@tgbot.on(events.callbackquery.CallbackQuery(data=re.compile(b"gibcmd")))
async def users(event):
    await event.delete()
    rorza = "** ููุงุฆููุฉ ุงูุงููุฑ ุจูุช ุงูุนูุฑุจ ุงูุฎุงุตูุฉ ุจู **:\n\n- **ุฌููุน ูุฐู ุงูุงูุงูุฑ ุชุณุชุฎุฏู ุจุนุฏ ุงุถุงูุฉ ุงูุจูุช ูู ูุฌููุนุฉ ูุฑูุนู ูุดูุฑู ูุน ุจุนุถ ุงูุตูุงุญููุงุช\n\nโข /start \n ( ูููุชุฃูุฏ ูู ุญุงููุฉ ุงูุจููุช) \n\nโข /ping \n ( ุงููุฑ ุจููู )  \n\nโข /broadcast \n ( ูุนููู ุงุฐุงุนูุฉ ูุฌูููุน ุงููุณุชุฎุฏููู ูู ุงูุจููุช )  \n\nโข /id \n  ( ูุนูุฑุถ ุงูุฏู ุงููุณูุชุฎุฏู ) \n\nโข /alive \n- ( ููุฑุคูุฉ ูุนูููุงุช ุงูุจููุช ) \n\nโข /bun \n-  ( ุชุนูู ูู ุงููุฌููุนุงุช ูุญุธุฑ ุดุฎุต )\n\nโข /unbun  \n-  ( ุชุนูู ูู ุงููุฌููุนุงุช ูุงูุบุงุก ุญุธุฑ ูุณุชุฎุฏู )  \n\nโข /prumote  \n-  ( ูุฑููุน ุดุฎุต ูุดูุฑู )\n\nโข /demute  \n-  ( ูุชูุฒูู ุงูุดุฎุต ูู ุฑุชุจุฉ ุงูุงุดุฑุงู ) \n\nโข /pin  \n-  ( ูุชุซุจููุช ุฑุณุงูุฉ ูู ุงููุฌููุนูุฉ )  \n\nโข /stats  \n-  ( ูุนุฑุถ ูุณุชุฎุฏููู ุงูุจูุช )  \n\nโข /purge  \n-  ( ุจุงูุฑุฏ ุนูู ุฑุณุงูุฉ ููููู ุจุญุฐู ูุง ุชุญุชูุง ูู ุฑุณุงุฆู ) \n\nโข /del  \n-  ( ุจุงููุฑุฏ ุนูู ุงูุฑุณุงููุฉ ูุญูุฐููุง ) \n\n [ุงูุนูุฑุจ | ๐ฆ๐ฐ๐ผ๐ฟ๐ฝ๐ถ๐ผ ๐ฆ](t.me/Scorpions_scorp)**"
    await tgbot.send_message(event.chat_id, rorza)

@tgbot.on(events.NewMessage(pattern="^/help", func=lambda e: e.sender_id == bot.uid))
async def starkislub(event):
    rorza = "** ููุงุฆููุฉ ุงูุงููุฑ ุจูุช ุงูุนูุฑุจ ุงูุฎุงุตูุฉ ุจู **:\n\n- **ุฌููุน ูุฐู ุงูุงูุงูุฑ ุชุณุชุฎุฏู ุจุนุฏ ุงุถุงูุฉ ุงูุจูุช ูู ูุฌููุนุฉ ูุฑูุนู ูุดูุฑู ูุน ุจุนุถ ุงูุตูุงุญููุงุช\n\nโข /start \n ( ูููุชุฃูุฏ ูู ุญุงููุฉ ุงูุจููุช) \n\nโข /ping \n ( ุงููุฑ ุจููู )  \n\nโข /broadcast \n ( ูุนููู ุงุฐุงุนูุฉ ูุฌูููุน ุงููุณุชุฎุฏููู ูู ุงูุจููุช )  \n\nโข /id \n  ( ูุนูุฑุถ ุงูุฏู ุงููุณูุชุฎุฏู ) \n\nโข /alive \n- ( ููุฑุคูุฉ ูุนูููุงุช ุงูุจููุช ) \n\nโข /bun \n-  ( ุชุนูู ูู ุงููุฌููุนุงุช ูุญุธุฑ ุดุฎุต )\n\nโข /unbun  \n-  ( ุชุนูู ูู ุงููุฌููุนุงุช ูุงูุบุงุก ุญุธุฑ ูุณุชุฎุฏู )  \n\nโข /prumote  \n-  ( ูุฑููุน ุดุฎุต ูุดูุฑู )\n\nโข /demute  \n-  ( ูุชูุฒูู ุงูุดุฎุต ูู ุฑุชุจุฉ ุงูุงุดุฑุงู ) \n\nโข /pin  \n-  ( ูุชุซุจููุช ุฑุณุงูุฉ ูู ุงููุฌููุนูุฉ )  \n\nโข /stats  \n-  ( ูุนุฑุถ ูุณุชุฎุฏููู ุงูุจูุช )  \n\nโข /purge  \n-  ( ุจุงูุฑุฏ ุนูู ุฑุณุงูุฉ ููููู ุจุญุฐู ูุง ุชุญุชูุง ูู ุฑุณุงุฆู ) \n\nโข /del  \n-  ( ุจุงููุฑุฏ ุนูู ุงูุฑุณุงููุฉ ูุญูุฐููุง ) \n\n [ุงูุนูุฑุจ | ๐ฆ๐ฐ๐ผ๐ฟ๐ฝ๐ถ๐ผ ๐ฆ](t.me/Scorpions_scorp)**"
    await event.reply(rorza)

@tgbot.on(events.NewMessage(pattern="^/alive", func=lambda e: e.sender_id == bot.uid))
async def starkislub(event):
    razan = "**ุจูุช ุงูุนูุฑุจ**\n\n**- ุญุงูุฉ ุงูุจูุช **  ูุนููู ุจูุฌูุงุญ\n**- ุงุตุฏุงุฑ ุงูุชููุซูู  **: 1.23.0\n**- ุงุตุฏุงุฑ ุงูุจุงูุซูู **: 3.10.9\n\n**ุงูุนูุฑุจ |  ๐ฆ๐ฐ๐ผ๐ฟ๐ฝ๐ถ๐ผ ๐ฆ**\n"
    await event.reply(razan)

# ุจุฏุก ุชุดุบูู ุงูุจูุช
if __name__ == "__main__":
    bot.polling(none_stop=True)
